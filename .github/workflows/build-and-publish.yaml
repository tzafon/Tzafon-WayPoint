#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/tzafon

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Browser Container image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps
          file: apps/Dockerfile.rust-builder
          target: browser-container
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/browser-container:${{ github.sha }}
            ${{ env.IMAGE_PREFIX }}/browser-container:latest
      - name: Build and push Instance Manager image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps
          file: apps/Dockerfile.rust-builder
          target: instance-manager
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/instance-manager:${{ github.sha }}
            ${{ env.IMAGE_PREFIX }}/instance-manager:latest
      - name: Build and push Browser Warmpool image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps
          file: apps/Dockerfile.rust-builder
          target: ephemeral-browser-proxy
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/ephemeral-browser-proxy:${{ github.sha }}
            ${{ env.IMAGE_PREFIX }}/ephemeral-browser-proxy:latest
